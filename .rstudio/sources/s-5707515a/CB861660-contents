---
title: "STA238-Week1-EDA"
author: "Samantha-Jo Caetano"
date: "12/01/2021"
output:
  pdf_document: default
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Introduction to Data Analysis: Basic Summaries


## Coffee Ratings

There is a csv file with data on different coffees and their ratings. Let's read in the data

### Read in the data


```{r}
library(tidyverse)

coffee <- read_csv("coffee_ratings.csv")
```

We can use `glimpse()` to look at the data.

```{r}
glimpse(coffee)

```
We can also use `head()` to look at the data.

```{r}
head(coffee)

```

### Histograms

Okay, let's build a histogram of the aroma levels. 

In base R:

```{r}

```

Using tidyverse (ggplot2):

```{r}
coffee %>% 
  ggplot(aes(x=aroma)) +
  theme_classic() +
  geom_histogram(aes(y=..density..), bins=30, color="black", fill="light blue", alpha=0.3)+
  labs(title="Coffee Aroma Score",
       x = "Aroma Score",
       y = "Density" )

```


Try different numbers of bins and you might see different patterns. Do you think this is a good or bad thing, or both? The "optimal" bin width is $b=(24\sqrt\pi)^{1/3} s n^{-1/3}$.

```{r}

```


### Kernel Density Estimates


To get kernel density estimates, there are a couple different ways. The density function in `R` does the math for you, using a Gaussian kernel. You can plot the output of density using base `R` or `ggplot`. 

```{r}
# Kernel density estimation in R
dens <- density(coffee$aroma)
dens

```


Okay, now let's plot this base `R` estimate:

```{r}
plot(dens)
```


Okay, let's try with `ggplot`:

```{r}
tibble(x = dens$x,y = dens$y) %>%
  ggplot(aes(x = x,y = y)) +
  theme_classic() + 
  geom_line() +
  labs(title = "Kernel density estimate, Old Faithful data",
       subtitle = "Manually-calculated values",
       x = "Eruption time",
       y = "Density")
```

```{r}
# Can also do automatically:
coffee %>%
  ggplot(aes(x = aroma)) +
  theme_classic() + 
  geom_density() +
  labs(title = "Kernel density estimate, Old Faithful data",
       subtitle = "Automatically-calculated values",
       x = "Eruption time",
       y = "Density")
```


### Empirical Distribution Function

In base `R`:

```{r}

coffee_ecdf <- ecdf(coffee$aroma)

plot(coffee_ecdf)

```

In `ggplot`:

```{r}
tibble(x = c(1,10)) %>% # Tell ggplot we want to plot the ecdf from 1 to 10
  ggplot(aes(x = x)) +
  theme_classic() +
  stat_function(fun = coffee_ecdf) +
  labs(title = "Empirical CDF for Coffee Aroma Scores",
       x = "Aroma Scores",
       y = "Empirical probability that a score is less than x")
```

Note, there is additional code in the Supplementary Materials regarding this.

### Boxplots

To get a boxplot, again, you can use base `R` or `ggplot`. We have:

```{r}
boxplot(coffee$aroma)
```


```{r}
# ggplot
coffee %>%
  ggplot(aes(y = aroma)) +
  theme_classic() +
  geom_boxplot(width = .1) +
  labs(title = "Boxplot of Coffee Aroma Scores",
       y = "Aroma Scores") +
  # Have to play around with the x axis to get it to look nice *shrug*
  coord_cartesian(xlim = c(-.2,.2)) +
  theme(axis.text.x = element_blank())
```

### Scatterplots

Let's build a scatterplot of Aroma vs Total Points. To see if there is a relationship.


In base `R`:

```{r}
plot(total_cup_points ~ aroma, data=coffee)

```

In base `ggplot`:

```{r}
coffee %>%
  ggplot(aes(x = aroma, y = total_cup_points)) +
  theme_classic() +
  geom_point(pch = 21) # pch=21 is the magic command to give you hollow points
  
  # Note, we can use labs() to update the title, x-axis and y-axis labels.
  # Same way as a histogram.

```

### Numerical Summaries

A numerical summary is any number or numbers you calculate from the data. The basic numerical summaries of interest include the sample mean and median, sample standard deviation and mean absolute deviation, and quantiles.

Let's find the mean, median, standard deviation, quantiles, IQR, etc.

```{r}

# Quantiles
quantile(coffee$aroma, probs=0.7)

IQR(coffee$aroma)

```





